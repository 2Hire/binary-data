const { Transform } = require('stream')
const BufferList = require('bl')

module.exports = class AbstractStream extends Transform {
  constructor(options = {}) {
    super(options)

    this._buffer = new BufferList()
    this._schema = options.schema
  }

  get length() {
    return this._buffer.length
  }

  append(buf) {
    this._buffer.append(buf)
  }

  get(i) {
    return this._buffer.get(i)
  }

  slice(start, end) {
    return this._buffer.slice(start, end)
  }

  copy(dest, destStart, srcStart, srcEnd) {
    return this._buffer.copy(dest, destStart, srcStart, srcEnd)
  }

  consume(bytes) {
    this._buffer.consume(bytes)
  }

  toString(enc, start, end) {
    return this._buffer.toString(enc, start, end)
  }
}
